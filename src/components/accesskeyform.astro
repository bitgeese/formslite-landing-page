---
import Button from "./ui/button.astro";
---

<form
  action={`${import.meta.env.API_URL}/access_keys/`}
  method="POST"
  class="needs-validation"
  novalidate>
  <input type="text" class="hidden" name="access_key" value="bb25a647-3955-47a3-ba29-c88995e3e0eb">
  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label><input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="user"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  
  <Button type="submit" size="lg" block>Create Access Key</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Sending...";
    
    fetch(`${import.meta.env.API_URL}/access_keys/`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json",
      },
      body: json,
    })
    .then(async (response) => {
      let json = await response.json();
      if (response.status === 201) {
        result.classList.add("text-green-500");
        result.innerHTML = "Access key created successfully!";
      } else {
        console.log(response);
        result.classList.add("text-red-500");
        result.innerHTML = json.message;
      }
    })
    .catch((error) => {
      console.log(error);
      result.innerHTML = "Something went wrong!";
    })
    .finally(() => {
      form.reset();
      form.classList.remove("was-validated");
      setTimeout(() => {
        result.style.display = "none";
      }, 5000);
    });
  });
</script>
